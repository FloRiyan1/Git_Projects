package test;

import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.SecureRandom;
import java.security.spec.ECGenParameterSpec;

public class EllipticCurveKeyExample {
	
	private KeyPair keyPair;
	
    private KeyPair generateKeyPair() throws Exception 
    {    	
    	String curveName = "secp256r1";
        KeyPairGenerator keyGen = KeyPairGenerator.getInstance("EC", "SunEC");
        ECGenParameterSpec ecSpec = new ECGenParameterSpec(curveName);
        keyGen.initialize(ecSpec, new SecureRandom());
        KeyPair keyPair = keyGen.generateKeyPair();

		return keyPair;
    }

	public KeyPair getKeyPair() throws Exception {
		if(keyPair == null)
		{
			keyPair = generateKeyPair();
		}
		return keyPair;
	}
	
	//TODO das Strings Ã¼bergeben werden und keine byte[]
	public String getKeyPairDes() throws Exception
	{
		KeyPair ecKeyPair = getKeyPair();
		byte[] ecPrivateKey = ecKeyPair.getPrivate().getEncoded();
		byte[] desKey = new byte[24];
		System.arraycopy(ecPrivateKey, 0, desKey, 0, 24);

		return byteArrayToString(desKey);
	}
	
	public String byteArrayToString(byte[] byteArray)
	{
		String result = new String(byteArray);
		byte[] test = result.getBytes();
		return result.toString();
	}
}
